// Klib ABI Dump
// Targets: [androidNativeArm32, androidNativeArm64, androidNativeX64, androidNativeX86, iosArm64, iosSimulatorArm64, iosX64, js, linuxArm64, linuxX64, macosArm64, macosX64, mingwX64, tvosArm64, tvosSimulatorArm64, tvosX64, watchosArm32, watchosArm64, watchosDeviceArm64, watchosSimulatorArm64, watchosX64]
// Rendering settings:
// - Signature version: 2
// - Show manifest properties: true
// - Show declarations: true

// Library unique name: <io.github.kingg22:annotations>
open annotation class io.github.kingg22.ktorgen.core/Generated : kotlin/Annotation { // io.github.kingg22.ktorgen.core/Generated|null[0]
    constructor <init>() // io.github.kingg22.ktorgen.core/Generated.<init>|<init>(){}[0]
}

open annotation class io.github.kingg22.ktorgen.core/KtorGen : kotlin/Annotation { // io.github.kingg22.ktorgen.core/KtorGen|null[0]
    constructor <init>(kotlin/String = ..., kotlin/Boolean = ..., kotlin/String = ..., kotlin/Boolean = ..., kotlin/Boolean = ..., kotlin/Boolean = ..., kotlin/Boolean = ..., kotlin/Array<kotlin.reflect/KClass<out kotlin/Annotation>> = ..., kotlin/Array<kotlin.reflect/KClass<out kotlin/Annotation>> = ..., kotlin/String = ..., kotlin/String = ..., kotlin/String = ...) // io.github.kingg22.ktorgen.core/KtorGen.<init>|<init>(kotlin.String;kotlin.Boolean;kotlin.String;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Array<kotlin.reflect.KClass<out|kotlin.Annotation>>;kotlin.Array<kotlin.reflect.KClass<out|kotlin.Annotation>>;kotlin.String;kotlin.String;kotlin.String){}[0]

    final val annotations // io.github.kingg22.ktorgen.core/KtorGen.annotations|{}annotations[0]
        final fun <get-annotations>(): kotlin/Array<kotlin.reflect/KClass<out kotlin/Annotation>> // io.github.kingg22.ktorgen.core/KtorGen.annotations.<get-annotations>|<get-annotations>(){}[0]
    final val basePath // io.github.kingg22.ktorgen.core/KtorGen.basePath|{}basePath[0]
        final fun <get-basePath>(): kotlin/String // io.github.kingg22.ktorgen.core/KtorGen.basePath.<get-basePath>|<get-basePath>(){}[0]
    final val customClassHeader // io.github.kingg22.ktorgen.core/KtorGen.customClassHeader|{}customClassHeader[0]
        final fun <get-customClassHeader>(): kotlin/String // io.github.kingg22.ktorgen.core/KtorGen.customClassHeader.<get-customClassHeader>|<get-customClassHeader>(){}[0]
    final val customFileHeader // io.github.kingg22.ktorgen.core/KtorGen.customFileHeader|{}customFileHeader[0]
        final fun <get-customFileHeader>(): kotlin/String // io.github.kingg22.ktorgen.core/KtorGen.customFileHeader.<get-customFileHeader>|<get-customFileHeader>(){}[0]
    final val generate // io.github.kingg22.ktorgen.core/KtorGen.generate|{}generate[0]
        final fun <get-generate>(): kotlin/Boolean // io.github.kingg22.ktorgen.core/KtorGen.generate.<get-generate>|<get-generate>(){}[0]
    final val generateCompanionExtFunction // io.github.kingg22.ktorgen.core/KtorGen.generateCompanionExtFunction|{}generateCompanionExtFunction[0]
        final fun <get-generateCompanionExtFunction>(): kotlin/Boolean // io.github.kingg22.ktorgen.core/KtorGen.generateCompanionExtFunction.<get-generateCompanionExtFunction>|<get-generateCompanionExtFunction>(){}[0]
    final val generateHttpClientExtension // io.github.kingg22.ktorgen.core/KtorGen.generateHttpClientExtension|{}generateHttpClientExtension[0]
        final fun <get-generateHttpClientExtension>(): kotlin/Boolean // io.github.kingg22.ktorgen.core/KtorGen.generateHttpClientExtension.<get-generateHttpClientExtension>|<get-generateHttpClientExtension>(){}[0]
    final val generateTopLevelFunction // io.github.kingg22.ktorgen.core/KtorGen.generateTopLevelFunction|{}generateTopLevelFunction[0]
        final fun <get-generateTopLevelFunction>(): kotlin/Boolean // io.github.kingg22.ktorgen.core/KtorGen.generateTopLevelFunction.<get-generateTopLevelFunction>|<get-generateTopLevelFunction>(){}[0]
    final val name // io.github.kingg22.ktorgen.core/KtorGen.name|{}name[0]
        final fun <get-name>(): kotlin/String // io.github.kingg22.ktorgen.core/KtorGen.name.<get-name>|<get-name>(){}[0]
    final val optInAnnotations // io.github.kingg22.ktorgen.core/KtorGen.optInAnnotations|{}optInAnnotations[0]
        final fun <get-optInAnnotations>(): kotlin/Array<kotlin.reflect/KClass<out kotlin/Annotation>> // io.github.kingg22.ktorgen.core/KtorGen.optInAnnotations.<get-optInAnnotations>|<get-optInAnnotations>(){}[0]
    final val propagateAnnotations // io.github.kingg22.ktorgen.core/KtorGen.propagateAnnotations|{}propagateAnnotations[0]
        final fun <get-propagateAnnotations>(): kotlin/Boolean // io.github.kingg22.ktorgen.core/KtorGen.propagateAnnotations.<get-propagateAnnotations>|<get-propagateAnnotations>(){}[0]
    final val visibilityModifier // io.github.kingg22.ktorgen.core/KtorGen.visibilityModifier|{}visibilityModifier[0]
        final fun <get-visibilityModifier>(): kotlin/String // io.github.kingg22.ktorgen.core/KtorGen.visibilityModifier.<get-visibilityModifier>|<get-visibilityModifier>(){}[0]
}

open annotation class io.github.kingg22.ktorgen.core/KtorGenExperimental : kotlin/Annotation { // io.github.kingg22.ktorgen.core/KtorGenExperimental|null[0]
    constructor <init>() // io.github.kingg22.ktorgen.core/KtorGenExperimental.<init>|<init>(){}[0]
}

open annotation class io.github.kingg22.ktorgen.core/KtorGenFunction : kotlin/Annotation { // io.github.kingg22.ktorgen.core/KtorGenFunction|null[0]
    constructor <init>(kotlin/Boolean = ..., kotlin/Boolean = ..., kotlin/Array<kotlin.reflect/KClass<out kotlin/Annotation>> = ..., kotlin/Array<kotlin.reflect/KClass<out kotlin/Annotation>> = ..., kotlin/String = ...) // io.github.kingg22.ktorgen.core/KtorGenFunction.<init>|<init>(kotlin.Boolean;kotlin.Boolean;kotlin.Array<kotlin.reflect.KClass<out|kotlin.Annotation>>;kotlin.Array<kotlin.reflect.KClass<out|kotlin.Annotation>>;kotlin.String){}[0]

    final val annotations // io.github.kingg22.ktorgen.core/KtorGenFunction.annotations|{}annotations[0]
        final fun <get-annotations>(): kotlin/Array<kotlin.reflect/KClass<out kotlin/Annotation>> // io.github.kingg22.ktorgen.core/KtorGenFunction.annotations.<get-annotations>|<get-annotations>(){}[0]
    final val customHeader // io.github.kingg22.ktorgen.core/KtorGenFunction.customHeader|{}customHeader[0]
        final fun <get-customHeader>(): kotlin/String // io.github.kingg22.ktorgen.core/KtorGenFunction.customHeader.<get-customHeader>|<get-customHeader>(){}[0]
    final val generate // io.github.kingg22.ktorgen.core/KtorGenFunction.generate|{}generate[0]
        final fun <get-generate>(): kotlin/Boolean // io.github.kingg22.ktorgen.core/KtorGenFunction.generate.<get-generate>|<get-generate>(){}[0]
    final val optInAnnotations // io.github.kingg22.ktorgen.core/KtorGenFunction.optInAnnotations|{}optInAnnotations[0]
        final fun <get-optInAnnotations>(): kotlin/Array<kotlin.reflect/KClass<out kotlin/Annotation>> // io.github.kingg22.ktorgen.core/KtorGenFunction.optInAnnotations.<get-optInAnnotations>|<get-optInAnnotations>(){}[0]
    final val propagateAnnotations // io.github.kingg22.ktorgen.core/KtorGenFunction.propagateAnnotations|{}propagateAnnotations[0]
        final fun <get-propagateAnnotations>(): kotlin/Boolean // io.github.kingg22.ktorgen.core/KtorGenFunction.propagateAnnotations.<get-propagateAnnotations>|<get-propagateAnnotations>(){}[0]
}

open annotation class io.github.kingg22.ktorgen.http/Body : kotlin/Annotation { // io.github.kingg22.ktorgen.http/Body|null[0]
    constructor <init>() // io.github.kingg22.ktorgen.http/Body.<init>|<init>(){}[0]
}

open annotation class io.github.kingg22.ktorgen.http/Cookie : kotlin/Annotation { // io.github.kingg22.ktorgen.http/Cookie|null[0]
    constructor <init>(kotlin/String, kotlin/String = ..., kotlin/Int = ..., kotlin/Long = ..., kotlin/String = ..., kotlin/String = ..., kotlin/Boolean = ..., kotlin/Boolean = ..., kotlin/Array<io.github.kingg22.ktorgen.http/Cookie.PairString> = ...) // io.github.kingg22.ktorgen.http/Cookie.<init>|<init>(kotlin.String;kotlin.String;kotlin.Int;kotlin.Long;kotlin.String;kotlin.String;kotlin.Boolean;kotlin.Boolean;kotlin.Array<io.github.kingg22.ktorgen.http.Cookie.PairString>){}[0]

    final val domain // io.github.kingg22.ktorgen.http/Cookie.domain|{}domain[0]
        final fun <get-domain>(): kotlin/String // io.github.kingg22.ktorgen.http/Cookie.domain.<get-domain>|<get-domain>(){}[0]
    final val expiresTimestamp // io.github.kingg22.ktorgen.http/Cookie.expiresTimestamp|{}expiresTimestamp[0]
        final fun <get-expiresTimestamp>(): kotlin/Long // io.github.kingg22.ktorgen.http/Cookie.expiresTimestamp.<get-expiresTimestamp>|<get-expiresTimestamp>(){}[0]
    final val extensions // io.github.kingg22.ktorgen.http/Cookie.extensions|{}extensions[0]
        final fun <get-extensions>(): kotlin/Array<io.github.kingg22.ktorgen.http/Cookie.PairString> // io.github.kingg22.ktorgen.http/Cookie.extensions.<get-extensions>|<get-extensions>(){}[0]
    final val httpOnly // io.github.kingg22.ktorgen.http/Cookie.httpOnly|{}httpOnly[0]
        final fun <get-httpOnly>(): kotlin/Boolean // io.github.kingg22.ktorgen.http/Cookie.httpOnly.<get-httpOnly>|<get-httpOnly>(){}[0]
    final val maxAge // io.github.kingg22.ktorgen.http/Cookie.maxAge|{}maxAge[0]
        final fun <get-maxAge>(): kotlin/Int // io.github.kingg22.ktorgen.http/Cookie.maxAge.<get-maxAge>|<get-maxAge>(){}[0]
    final val name // io.github.kingg22.ktorgen.http/Cookie.name|{}name[0]
        final fun <get-name>(): kotlin/String // io.github.kingg22.ktorgen.http/Cookie.name.<get-name>|<get-name>(){}[0]
    final val path // io.github.kingg22.ktorgen.http/Cookie.path|{}path[0]
        final fun <get-path>(): kotlin/String // io.github.kingg22.ktorgen.http/Cookie.path.<get-path>|<get-path>(){}[0]
    final val secure // io.github.kingg22.ktorgen.http/Cookie.secure|{}secure[0]
        final fun <get-secure>(): kotlin/Boolean // io.github.kingg22.ktorgen.http/Cookie.secure.<get-secure>|<get-secure>(){}[0]
    final val value // io.github.kingg22.ktorgen.http/Cookie.value|{}value[0]
        final fun <get-value>(): kotlin/String // io.github.kingg22.ktorgen.http/Cookie.value.<get-value>|<get-value>(){}[0]

    open annotation class PairString : kotlin/Annotation { // io.github.kingg22.ktorgen.http/Cookie.PairString|null[0]
        constructor <init>(kotlin/String, kotlin/String) // io.github.kingg22.ktorgen.http/Cookie.PairString.<init>|<init>(kotlin.String;kotlin.String){}[0]

        final val first // io.github.kingg22.ktorgen.http/Cookie.PairString.first|{}first[0]
            final fun <get-first>(): kotlin/String // io.github.kingg22.ktorgen.http/Cookie.PairString.first.<get-first>|<get-first>(){}[0]
        final val second // io.github.kingg22.ktorgen.http/Cookie.PairString.second|{}second[0]
            final fun <get-second>(): kotlin/String // io.github.kingg22.ktorgen.http/Cookie.PairString.second.<get-second>|<get-second>(){}[0]
    }

    final object Companion { // io.github.kingg22.ktorgen.http/Cookie.Companion|null[0]
        final const val AccessToken // io.github.kingg22.ktorgen.http/Cookie.Companion.AccessToken|{}AccessToken[0]
            final fun <get-AccessToken>(): kotlin/String // io.github.kingg22.ktorgen.http/Cookie.Companion.AccessToken.<get-AccessToken>|<get-AccessToken>(){}[0]
        final const val Auth // io.github.kingg22.ktorgen.http/Cookie.Companion.Auth|{}Auth[0]
            final fun <get-Auth>(): kotlin/String // io.github.kingg22.ktorgen.http/Cookie.Companion.Auth.<get-Auth>|<get-Auth>(){}[0]
        final const val AuthToken // io.github.kingg22.ktorgen.http/Cookie.Companion.AuthToken|{}AuthToken[0]
            final fun <get-AuthToken>(): kotlin/String // io.github.kingg22.ktorgen.http/Cookie.Companion.AuthToken.<get-AuthToken>|<get-AuthToken>(){}[0]
        final const val Bearer // io.github.kingg22.ktorgen.http/Cookie.Companion.Bearer|{}Bearer[0]
            final fun <get-Bearer>(): kotlin/String // io.github.kingg22.ktorgen.http/Cookie.Companion.Bearer.<get-Bearer>|<get-Bearer>(){}[0]
        final const val ClientId // io.github.kingg22.ktorgen.http/Cookie.Companion.ClientId|{}ClientId[0]
            final fun <get-ClientId>(): kotlin/String // io.github.kingg22.ktorgen.http/Cookie.Companion.ClientId.<get-ClientId>|<get-ClientId>(){}[0]
        final const val Csrf // io.github.kingg22.ktorgen.http/Cookie.Companion.Csrf|{}Csrf[0]
            final fun <get-Csrf>(): kotlin/String // io.github.kingg22.ktorgen.http/Cookie.Companion.Csrf.<get-Csrf>|<get-Csrf>(){}[0]
        final const val CsrfToken // io.github.kingg22.ktorgen.http/Cookie.Companion.CsrfToken|{}CsrfToken[0]
            final fun <get-CsrfToken>(): kotlin/String // io.github.kingg22.ktorgen.http/Cookie.Companion.CsrfToken.<get-CsrfToken>|<get-CsrfToken>(){}[0]
        final const val IdToken // io.github.kingg22.ktorgen.http/Cookie.Companion.IdToken|{}IdToken[0]
            final fun <get-IdToken>(): kotlin/String // io.github.kingg22.ktorgen.http/Cookie.Companion.IdToken.<get-IdToken>|<get-IdToken>(){}[0]
        final const val Lang // io.github.kingg22.ktorgen.http/Cookie.Companion.Lang|{}Lang[0]
            final fun <get-Lang>(): kotlin/String // io.github.kingg22.ktorgen.http/Cookie.Companion.Lang.<get-Lang>|<get-Lang>(){}[0]
        final const val Locale // io.github.kingg22.ktorgen.http/Cookie.Companion.Locale|{}Locale[0]
            final fun <get-Locale>(): kotlin/String // io.github.kingg22.ktorgen.http/Cookie.Companion.Locale.<get-Locale>|<get-Locale>(){}[0]
        final const val RefreshToken // io.github.kingg22.ktorgen.http/Cookie.Companion.RefreshToken|{}RefreshToken[0]
            final fun <get-RefreshToken>(): kotlin/String // io.github.kingg22.ktorgen.http/Cookie.Companion.RefreshToken.<get-RefreshToken>|<get-RefreshToken>(){}[0]
        final const val SID // io.github.kingg22.ktorgen.http/Cookie.Companion.SID|{}SID[0]
            final fun <get-SID>(): kotlin/String // io.github.kingg22.ktorgen.http/Cookie.Companion.SID.<get-SID>|<get-SID>(){}[0]
        final const val SameSite // io.github.kingg22.ktorgen.http/Cookie.Companion.SameSite|{}SameSite[0]
            final fun <get-SameSite>(): kotlin/String // io.github.kingg22.ktorgen.http/Cookie.Companion.SameSite.<get-SameSite>|<get-SameSite>(){}[0]
        final const val SessionId // io.github.kingg22.ktorgen.http/Cookie.Companion.SessionId|{}SessionId[0]
            final fun <get-SessionId>(): kotlin/String // io.github.kingg22.ktorgen.http/Cookie.Companion.SessionId.<get-SessionId>|<get-SessionId>(){}[0]
        final const val SessionTrack // io.github.kingg22.ktorgen.http/Cookie.Companion.SessionTrack|{}SessionTrack[0]
            final fun <get-SessionTrack>(): kotlin/String // io.github.kingg22.ktorgen.http/Cookie.Companion.SessionTrack.<get-SessionTrack>|<get-SessionTrack>(){}[0]
        final const val Theme // io.github.kingg22.ktorgen.http/Cookie.Companion.Theme|{}Theme[0]
            final fun <get-Theme>(): kotlin/String // io.github.kingg22.ktorgen.http/Cookie.Companion.Theme.<get-Theme>|<get-Theme>(){}[0]
        final const val Token // io.github.kingg22.ktorgen.http/Cookie.Companion.Token|{}Token[0]
            final fun <get-Token>(): kotlin/String // io.github.kingg22.ktorgen.http/Cookie.Companion.Token.<get-Token>|<get-Token>(){}[0]
        final const val TrackId // io.github.kingg22.ktorgen.http/Cookie.Companion.TrackId|{}TrackId[0]
            final fun <get-TrackId>(): kotlin/String // io.github.kingg22.ktorgen.http/Cookie.Companion.TrackId.<get-TrackId>|<get-TrackId>(){}[0]
        final const val XSRF_TOKEN // io.github.kingg22.ktorgen.http/Cookie.Companion.XSRF_TOKEN|{}XSRF_TOKEN[0]
            final fun <get-XSRF_TOKEN>(): kotlin/String // io.github.kingg22.ktorgen.http/Cookie.Companion.XSRF_TOKEN.<get-XSRF_TOKEN>|<get-XSRF_TOKEN>(){}[0]
    }

    final object SameSites { // io.github.kingg22.ktorgen.http/Cookie.SameSites|null[0]
        final const val Lax // io.github.kingg22.ktorgen.http/Cookie.SameSites.Lax|{}Lax[0]
            final fun <get-Lax>(): kotlin/String // io.github.kingg22.ktorgen.http/Cookie.SameSites.Lax.<get-Lax>|<get-Lax>(){}[0]
        final const val None // io.github.kingg22.ktorgen.http/Cookie.SameSites.None|{}None[0]
            final fun <get-None>(): kotlin/String // io.github.kingg22.ktorgen.http/Cookie.SameSites.None.<get-None>|<get-None>(){}[0]
        final const val Strict // io.github.kingg22.ktorgen.http/Cookie.SameSites.Strict|{}Strict[0]
            final fun <get-Strict>(): kotlin/String // io.github.kingg22.ktorgen.http/Cookie.SameSites.Strict.<get-Strict>|<get-Strict>(){}[0]
    }
}

open annotation class io.github.kingg22.ktorgen.http/DELETE : kotlin/Annotation { // io.github.kingg22.ktorgen.http/DELETE|null[0]
    constructor <init>(kotlin/String = ...) // io.github.kingg22.ktorgen.http/DELETE.<init>|<init>(kotlin.String){}[0]

    final val value // io.github.kingg22.ktorgen.http/DELETE.value|{}value[0]
        final fun <get-value>(): kotlin/String // io.github.kingg22.ktorgen.http/DELETE.value.<get-value>|<get-value>(){}[0]
}

open annotation class io.github.kingg22.ktorgen.http/Field : kotlin/Annotation { // io.github.kingg22.ktorgen.http/Field|null[0]
    constructor <init>(kotlin/String = ..., kotlin/Boolean = ...) // io.github.kingg22.ktorgen.http/Field.<init>|<init>(kotlin.String;kotlin.Boolean){}[0]

    final val encoded // io.github.kingg22.ktorgen.http/Field.encoded|{}encoded[0]
        final fun <get-encoded>(): kotlin/Boolean // io.github.kingg22.ktorgen.http/Field.encoded.<get-encoded>|<get-encoded>(){}[0]
    final val value // io.github.kingg22.ktorgen.http/Field.value|{}value[0]
        final fun <get-value>(): kotlin/String // io.github.kingg22.ktorgen.http/Field.value.<get-value>|<get-value>(){}[0]
}

open annotation class io.github.kingg22.ktorgen.http/FieldMap : kotlin/Annotation { // io.github.kingg22.ktorgen.http/FieldMap|null[0]
    constructor <init>(kotlin/Boolean = ...) // io.github.kingg22.ktorgen.http/FieldMap.<init>|<init>(kotlin.Boolean){}[0]

    final val encoded // io.github.kingg22.ktorgen.http/FieldMap.encoded|{}encoded[0]
        final fun <get-encoded>(): kotlin/Boolean // io.github.kingg22.ktorgen.http/FieldMap.encoded.<get-encoded>|<get-encoded>(){}[0]
}

open annotation class io.github.kingg22.ktorgen.http/FormUrlEncoded : kotlin/Annotation { // io.github.kingg22.ktorgen.http/FormUrlEncoded|null[0]
    constructor <init>() // io.github.kingg22.ktorgen.http/FormUrlEncoded.<init>|<init>(){}[0]
}

open annotation class io.github.kingg22.ktorgen.http/Fragment : kotlin/Annotation { // io.github.kingg22.ktorgen.http/Fragment|null[0]
    constructor <init>(kotlin/String, kotlin/Boolean = ...) // io.github.kingg22.ktorgen.http/Fragment.<init>|<init>(kotlin.String;kotlin.Boolean){}[0]

    final val encoded // io.github.kingg22.ktorgen.http/Fragment.encoded|{}encoded[0]
        final fun <get-encoded>(): kotlin/Boolean // io.github.kingg22.ktorgen.http/Fragment.encoded.<get-encoded>|<get-encoded>(){}[0]
    final val value // io.github.kingg22.ktorgen.http/Fragment.value|{}value[0]
        final fun <get-value>(): kotlin/String // io.github.kingg22.ktorgen.http/Fragment.value.<get-value>|<get-value>(){}[0]
}

open annotation class io.github.kingg22.ktorgen.http/GET : kotlin/Annotation { // io.github.kingg22.ktorgen.http/GET|null[0]
    constructor <init>(kotlin/String = ...) // io.github.kingg22.ktorgen.http/GET.<init>|<init>(kotlin.String){}[0]

    final val value // io.github.kingg22.ktorgen.http/GET.value|{}value[0]
        final fun <get-value>(): kotlin/String // io.github.kingg22.ktorgen.http/GET.value.<get-value>|<get-value>(){}[0]
}

open annotation class io.github.kingg22.ktorgen.http/HEAD : kotlin/Annotation { // io.github.kingg22.ktorgen.http/HEAD|null[0]
    constructor <init>(kotlin/String = ...) // io.github.kingg22.ktorgen.http/HEAD.<init>|<init>(kotlin.String){}[0]

    final val value // io.github.kingg22.ktorgen.http/HEAD.value|{}value[0]
        final fun <get-value>(): kotlin/String // io.github.kingg22.ktorgen.http/HEAD.value.<get-value>|<get-value>(){}[0]
}

open annotation class io.github.kingg22.ktorgen.http/HTTP : kotlin/Annotation { // io.github.kingg22.ktorgen.http/HTTP|null[0]
    constructor <init>(kotlin/String, kotlin/String = ..., kotlin/Boolean = ...) // io.github.kingg22.ktorgen.http/HTTP.<init>|<init>(kotlin.String;kotlin.String;kotlin.Boolean){}[0]

    final val hasBody // io.github.kingg22.ktorgen.http/HTTP.hasBody|{}hasBody[0]
        final fun <get-hasBody>(): kotlin/Boolean // io.github.kingg22.ktorgen.http/HTTP.hasBody.<get-hasBody>|<get-hasBody>(){}[0]
    final val method // io.github.kingg22.ktorgen.http/HTTP.method|{}method[0]
        final fun <get-method>(): kotlin/String // io.github.kingg22.ktorgen.http/HTTP.method.<get-method>|<get-method>(){}[0]
    final val path // io.github.kingg22.ktorgen.http/HTTP.path|{}path[0]
        final fun <get-path>(): kotlin/String // io.github.kingg22.ktorgen.http/HTTP.path.<get-path>|<get-path>(){}[0]
}

open annotation class io.github.kingg22.ktorgen.http/Header : kotlin/Annotation { // io.github.kingg22.ktorgen.http/Header|null[0]
    constructor <init>(kotlin/String, kotlin/String) // io.github.kingg22.ktorgen.http/Header.<init>|<init>(kotlin.String;kotlin.String){}[0]

    final val name // io.github.kingg22.ktorgen.http/Header.name|{}name[0]
        final fun <get-name>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.name.<get-name>|<get-name>(){}[0]
    final val value // io.github.kingg22.ktorgen.http/Header.value|{}value[0]
        final fun <get-value>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.value.<get-value>|<get-value>(){}[0]

    final object AcceptEncodings { // io.github.kingg22.ktorgen.http/Header.AcceptEncodings|null[0]
        final const val All // io.github.kingg22.ktorgen.http/Header.AcceptEncodings.All|{}All[0]
            final fun <get-All>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.AcceptEncodings.All.<get-All>|<get-All>(){}[0]
        final const val Br // io.github.kingg22.ktorgen.http/Header.AcceptEncodings.Br|{}Br[0]
            final fun <get-Br>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.AcceptEncodings.Br.<get-Br>|<get-Br>(){}[0]
        final const val Compress // io.github.kingg22.ktorgen.http/Header.AcceptEncodings.Compress|{}Compress[0]
            final fun <get-Compress>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.AcceptEncodings.Compress.<get-Compress>|<get-Compress>(){}[0]
        final const val Deflate // io.github.kingg22.ktorgen.http/Header.AcceptEncodings.Deflate|{}Deflate[0]
            final fun <get-Deflate>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.AcceptEncodings.Deflate.<get-Deflate>|<get-Deflate>(){}[0]
        final const val Gzip // io.github.kingg22.ktorgen.http/Header.AcceptEncodings.Gzip|{}Gzip[0]
            final fun <get-Gzip>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.AcceptEncodings.Gzip.<get-Gzip>|<get-Gzip>(){}[0]
        final const val Identity // io.github.kingg22.ktorgen.http/Header.AcceptEncodings.Identity|{}Identity[0]
            final fun <get-Identity>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.AcceptEncodings.Identity.<get-Identity>|<get-Identity>(){}[0]
        final const val Zstd // io.github.kingg22.ktorgen.http/Header.AcceptEncodings.Zstd|{}Zstd[0]
            final fun <get-Zstd>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.AcceptEncodings.Zstd.<get-Zstd>|<get-Zstd>(){}[0]
    }

    final object Companion { // io.github.kingg22.ktorgen.http/Header.Companion|null[0]
        final const val ALPN // io.github.kingg22.ktorgen.http/Header.Companion.ALPN|{}ALPN[0]
            final fun <get-ALPN>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.ALPN.<get-ALPN>|<get-ALPN>(){}[0]
        final const val Accept // io.github.kingg22.ktorgen.http/Header.Companion.Accept|{}Accept[0]
            final fun <get-Accept>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.Accept.<get-Accept>|<get-Accept>(){}[0]
        final const val AcceptCharset // io.github.kingg22.ktorgen.http/Header.Companion.AcceptCharset|{}AcceptCharset[0]
            final fun <get-AcceptCharset>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.AcceptCharset.<get-AcceptCharset>|<get-AcceptCharset>(){}[0]
        final const val AcceptEncoding // io.github.kingg22.ktorgen.http/Header.Companion.AcceptEncoding|{}AcceptEncoding[0]
            final fun <get-AcceptEncoding>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.AcceptEncoding.<get-AcceptEncoding>|<get-AcceptEncoding>(){}[0]
        final const val AcceptLanguage // io.github.kingg22.ktorgen.http/Header.Companion.AcceptLanguage|{}AcceptLanguage[0]
            final fun <get-AcceptLanguage>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.AcceptLanguage.<get-AcceptLanguage>|<get-AcceptLanguage>(){}[0]
        final const val AcceptRanges // io.github.kingg22.ktorgen.http/Header.Companion.AcceptRanges|{}AcceptRanges[0]
            final fun <get-AcceptRanges>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.AcceptRanges.<get-AcceptRanges>|<get-AcceptRanges>(){}[0]
        final const val AccessControlAllowCredentials // io.github.kingg22.ktorgen.http/Header.Companion.AccessControlAllowCredentials|{}AccessControlAllowCredentials[0]
            final fun <get-AccessControlAllowCredentials>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.AccessControlAllowCredentials.<get-AccessControlAllowCredentials>|<get-AccessControlAllowCredentials>(){}[0]
        final const val AccessControlAllowHeaders // io.github.kingg22.ktorgen.http/Header.Companion.AccessControlAllowHeaders|{}AccessControlAllowHeaders[0]
            final fun <get-AccessControlAllowHeaders>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.AccessControlAllowHeaders.<get-AccessControlAllowHeaders>|<get-AccessControlAllowHeaders>(){}[0]
        final const val AccessControlAllowMethods // io.github.kingg22.ktorgen.http/Header.Companion.AccessControlAllowMethods|{}AccessControlAllowMethods[0]
            final fun <get-AccessControlAllowMethods>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.AccessControlAllowMethods.<get-AccessControlAllowMethods>|<get-AccessControlAllowMethods>(){}[0]
        final const val AccessControlAllowOrigin // io.github.kingg22.ktorgen.http/Header.Companion.AccessControlAllowOrigin|{}AccessControlAllowOrigin[0]
            final fun <get-AccessControlAllowOrigin>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.AccessControlAllowOrigin.<get-AccessControlAllowOrigin>|<get-AccessControlAllowOrigin>(){}[0]
        final const val AccessControlExposeHeaders // io.github.kingg22.ktorgen.http/Header.Companion.AccessControlExposeHeaders|{}AccessControlExposeHeaders[0]
            final fun <get-AccessControlExposeHeaders>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.AccessControlExposeHeaders.<get-AccessControlExposeHeaders>|<get-AccessControlExposeHeaders>(){}[0]
        final const val AccessControlMaxAge // io.github.kingg22.ktorgen.http/Header.Companion.AccessControlMaxAge|{}AccessControlMaxAge[0]
            final fun <get-AccessControlMaxAge>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.AccessControlMaxAge.<get-AccessControlMaxAge>|<get-AccessControlMaxAge>(){}[0]
        final const val AccessControlRequestHeaders // io.github.kingg22.ktorgen.http/Header.Companion.AccessControlRequestHeaders|{}AccessControlRequestHeaders[0]
            final fun <get-AccessControlRequestHeaders>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.AccessControlRequestHeaders.<get-AccessControlRequestHeaders>|<get-AccessControlRequestHeaders>(){}[0]
        final const val AccessControlRequestMethod // io.github.kingg22.ktorgen.http/Header.Companion.AccessControlRequestMethod|{}AccessControlRequestMethod[0]
            final fun <get-AccessControlRequestMethod>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.AccessControlRequestMethod.<get-AccessControlRequestMethod>|<get-AccessControlRequestMethod>(){}[0]
        final const val Age // io.github.kingg22.ktorgen.http/Header.Companion.Age|{}Age[0]
            final fun <get-Age>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.Age.<get-Age>|<get-Age>(){}[0]
        final const val Allow // io.github.kingg22.ktorgen.http/Header.Companion.Allow|{}Allow[0]
            final fun <get-Allow>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.Allow.<get-Allow>|<get-Allow>(){}[0]
        final const val AuthenticationInfo // io.github.kingg22.ktorgen.http/Header.Companion.AuthenticationInfo|{}AuthenticationInfo[0]
            final fun <get-AuthenticationInfo>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.AuthenticationInfo.<get-AuthenticationInfo>|<get-AuthenticationInfo>(){}[0]
        final const val Authorization // io.github.kingg22.ktorgen.http/Header.Companion.Authorization|{}Authorization[0]
            final fun <get-Authorization>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.Authorization.<get-Authorization>|<get-Authorization>(){}[0]
        final const val CacheControl // io.github.kingg22.ktorgen.http/Header.Companion.CacheControl|{}CacheControl[0]
            final fun <get-CacheControl>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.CacheControl.<get-CacheControl>|<get-CacheControl>(){}[0]
        final const val Connection // io.github.kingg22.ktorgen.http/Header.Companion.Connection|{}Connection[0]
            final fun <get-Connection>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.Connection.<get-Connection>|<get-Connection>(){}[0]
        final const val ContentDisposition // io.github.kingg22.ktorgen.http/Header.Companion.ContentDisposition|{}ContentDisposition[0]
            final fun <get-ContentDisposition>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.ContentDisposition.<get-ContentDisposition>|<get-ContentDisposition>(){}[0]
        final const val ContentEncoding // io.github.kingg22.ktorgen.http/Header.Companion.ContentEncoding|{}ContentEncoding[0]
            final fun <get-ContentEncoding>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.ContentEncoding.<get-ContentEncoding>|<get-ContentEncoding>(){}[0]
        final const val ContentLanguage // io.github.kingg22.ktorgen.http/Header.Companion.ContentLanguage|{}ContentLanguage[0]
            final fun <get-ContentLanguage>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.ContentLanguage.<get-ContentLanguage>|<get-ContentLanguage>(){}[0]
        final const val ContentLength // io.github.kingg22.ktorgen.http/Header.Companion.ContentLength|{}ContentLength[0]
            final fun <get-ContentLength>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.ContentLength.<get-ContentLength>|<get-ContentLength>(){}[0]
        final const val ContentLocation // io.github.kingg22.ktorgen.http/Header.Companion.ContentLocation|{}ContentLocation[0]
            final fun <get-ContentLocation>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.ContentLocation.<get-ContentLocation>|<get-ContentLocation>(){}[0]
        final const val ContentRange // io.github.kingg22.ktorgen.http/Header.Companion.ContentRange|{}ContentRange[0]
            final fun <get-ContentRange>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.ContentRange.<get-ContentRange>|<get-ContentRange>(){}[0]
        final const val ContentType // io.github.kingg22.ktorgen.http/Header.Companion.ContentType|{}ContentType[0]
            final fun <get-ContentType>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.ContentType.<get-ContentType>|<get-ContentType>(){}[0]
        final const val Cookie // io.github.kingg22.ktorgen.http/Header.Companion.Cookie|{}Cookie[0]
            final fun <get-Cookie>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.Cookie.<get-Cookie>|<get-Cookie>(){}[0]
        final const val DASL // io.github.kingg22.ktorgen.http/Header.Companion.DASL|{}DASL[0]
            final fun <get-DASL>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.DASL.<get-DASL>|<get-DASL>(){}[0]
        final const val DAV // io.github.kingg22.ktorgen.http/Header.Companion.DAV|{}DAV[0]
            final fun <get-DAV>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.DAV.<get-DAV>|<get-DAV>(){}[0]
        final const val Date // io.github.kingg22.ktorgen.http/Header.Companion.Date|{}Date[0]
            final fun <get-Date>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.Date.<get-Date>|<get-Date>(){}[0]
        final const val Depth // io.github.kingg22.ktorgen.http/Header.Companion.Depth|{}Depth[0]
            final fun <get-Depth>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.Depth.<get-Depth>|<get-Depth>(){}[0]
        final const val Destination // io.github.kingg22.ktorgen.http/Header.Companion.Destination|{}Destination[0]
            final fun <get-Destination>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.Destination.<get-Destination>|<get-Destination>(){}[0]
        final const val ETag // io.github.kingg22.ktorgen.http/Header.Companion.ETag|{}ETag[0]
            final fun <get-ETag>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.ETag.<get-ETag>|<get-ETag>(){}[0]
        final const val Expect // io.github.kingg22.ktorgen.http/Header.Companion.Expect|{}Expect[0]
            final fun <get-Expect>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.Expect.<get-Expect>|<get-Expect>(){}[0]
        final const val Expires // io.github.kingg22.ktorgen.http/Header.Companion.Expires|{}Expires[0]
            final fun <get-Expires>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.Expires.<get-Expires>|<get-Expires>(){}[0]
        final const val Forwarded // io.github.kingg22.ktorgen.http/Header.Companion.Forwarded|{}Forwarded[0]
            final fun <get-Forwarded>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.Forwarded.<get-Forwarded>|<get-Forwarded>(){}[0]
        final const val From // io.github.kingg22.ktorgen.http/Header.Companion.From|{}From[0]
            final fun <get-From>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.From.<get-From>|<get-From>(){}[0]
        final const val HTTP2Settings // io.github.kingg22.ktorgen.http/Header.Companion.HTTP2Settings|{}HTTP2Settings[0]
            final fun <get-HTTP2Settings>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.HTTP2Settings.<get-HTTP2Settings>|<get-HTTP2Settings>(){}[0]
        final const val Host // io.github.kingg22.ktorgen.http/Header.Companion.Host|{}Host[0]
            final fun <get-Host>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.Host.<get-Host>|<get-Host>(){}[0]
        final const val If // io.github.kingg22.ktorgen.http/Header.Companion.If|{}If[0]
            final fun <get-If>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.If.<get-If>|<get-If>(){}[0]
        final const val IfMatch // io.github.kingg22.ktorgen.http/Header.Companion.IfMatch|{}IfMatch[0]
            final fun <get-IfMatch>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.IfMatch.<get-IfMatch>|<get-IfMatch>(){}[0]
        final const val IfModifiedSince // io.github.kingg22.ktorgen.http/Header.Companion.IfModifiedSince|{}IfModifiedSince[0]
            final fun <get-IfModifiedSince>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.IfModifiedSince.<get-IfModifiedSince>|<get-IfModifiedSince>(){}[0]
        final const val IfNoneMatch // io.github.kingg22.ktorgen.http/Header.Companion.IfNoneMatch|{}IfNoneMatch[0]
            final fun <get-IfNoneMatch>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.IfNoneMatch.<get-IfNoneMatch>|<get-IfNoneMatch>(){}[0]
        final const val IfRange // io.github.kingg22.ktorgen.http/Header.Companion.IfRange|{}IfRange[0]
            final fun <get-IfRange>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.IfRange.<get-IfRange>|<get-IfRange>(){}[0]
        final const val IfScheduleTagMatch // io.github.kingg22.ktorgen.http/Header.Companion.IfScheduleTagMatch|{}IfScheduleTagMatch[0]
            final fun <get-IfScheduleTagMatch>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.IfScheduleTagMatch.<get-IfScheduleTagMatch>|<get-IfScheduleTagMatch>(){}[0]
        final const val IfUnmodifiedSince // io.github.kingg22.ktorgen.http/Header.Companion.IfUnmodifiedSince|{}IfUnmodifiedSince[0]
            final fun <get-IfUnmodifiedSince>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.IfUnmodifiedSince.<get-IfUnmodifiedSince>|<get-IfUnmodifiedSince>(){}[0]
        final const val LastModified // io.github.kingg22.ktorgen.http/Header.Companion.LastModified|{}LastModified[0]
            final fun <get-LastModified>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.LastModified.<get-LastModified>|<get-LastModified>(){}[0]
        final const val Link // io.github.kingg22.ktorgen.http/Header.Companion.Link|{}Link[0]
            final fun <get-Link>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.Link.<get-Link>|<get-Link>(){}[0]
        final const val Location // io.github.kingg22.ktorgen.http/Header.Companion.Location|{}Location[0]
            final fun <get-Location>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.Location.<get-Location>|<get-Location>(){}[0]
        final const val LockToken // io.github.kingg22.ktorgen.http/Header.Companion.LockToken|{}LockToken[0]
            final fun <get-LockToken>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.LockToken.<get-LockToken>|<get-LockToken>(){}[0]
        final const val MIMEVersion // io.github.kingg22.ktorgen.http/Header.Companion.MIMEVersion|{}MIMEVersion[0]
            final fun <get-MIMEVersion>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.MIMEVersion.<get-MIMEVersion>|<get-MIMEVersion>(){}[0]
        final const val MaxForwards // io.github.kingg22.ktorgen.http/Header.Companion.MaxForwards|{}MaxForwards[0]
            final fun <get-MaxForwards>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.MaxForwards.<get-MaxForwards>|<get-MaxForwards>(){}[0]
        final const val OrderingType // io.github.kingg22.ktorgen.http/Header.Companion.OrderingType|{}OrderingType[0]
            final fun <get-OrderingType>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.OrderingType.<get-OrderingType>|<get-OrderingType>(){}[0]
        final const val Origin // io.github.kingg22.ktorgen.http/Header.Companion.Origin|{}Origin[0]
            final fun <get-Origin>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.Origin.<get-Origin>|<get-Origin>(){}[0]
        final const val Overwrite // io.github.kingg22.ktorgen.http/Header.Companion.Overwrite|{}Overwrite[0]
            final fun <get-Overwrite>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.Overwrite.<get-Overwrite>|<get-Overwrite>(){}[0]
        final const val Position // io.github.kingg22.ktorgen.http/Header.Companion.Position|{}Position[0]
            final fun <get-Position>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.Position.<get-Position>|<get-Position>(){}[0]
        final const val Pragma // io.github.kingg22.ktorgen.http/Header.Companion.Pragma|{}Pragma[0]
            final fun <get-Pragma>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.Pragma.<get-Pragma>|<get-Pragma>(){}[0]
        final const val Prefer // io.github.kingg22.ktorgen.http/Header.Companion.Prefer|{}Prefer[0]
            final fun <get-Prefer>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.Prefer.<get-Prefer>|<get-Prefer>(){}[0]
        final const val PreferenceApplied // io.github.kingg22.ktorgen.http/Header.Companion.PreferenceApplied|{}PreferenceApplied[0]
            final fun <get-PreferenceApplied>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.PreferenceApplied.<get-PreferenceApplied>|<get-PreferenceApplied>(){}[0]
        final const val ProxyAuthenticate // io.github.kingg22.ktorgen.http/Header.Companion.ProxyAuthenticate|{}ProxyAuthenticate[0]
            final fun <get-ProxyAuthenticate>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.ProxyAuthenticate.<get-ProxyAuthenticate>|<get-ProxyAuthenticate>(){}[0]
        final const val ProxyAuthenticationInfo // io.github.kingg22.ktorgen.http/Header.Companion.ProxyAuthenticationInfo|{}ProxyAuthenticationInfo[0]
            final fun <get-ProxyAuthenticationInfo>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.ProxyAuthenticationInfo.<get-ProxyAuthenticationInfo>|<get-ProxyAuthenticationInfo>(){}[0]
        final const val ProxyAuthorization // io.github.kingg22.ktorgen.http/Header.Companion.ProxyAuthorization|{}ProxyAuthorization[0]
            final fun <get-ProxyAuthorization>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.ProxyAuthorization.<get-ProxyAuthorization>|<get-ProxyAuthorization>(){}[0]
        final const val Range // io.github.kingg22.ktorgen.http/Header.Companion.Range|{}Range[0]
            final fun <get-Range>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.Range.<get-Range>|<get-Range>(){}[0]
        final const val Referrer // io.github.kingg22.ktorgen.http/Header.Companion.Referrer|{}Referrer[0]
            final fun <get-Referrer>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.Referrer.<get-Referrer>|<get-Referrer>(){}[0]
        final const val RetryAfter // io.github.kingg22.ktorgen.http/Header.Companion.RetryAfter|{}RetryAfter[0]
            final fun <get-RetryAfter>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.RetryAfter.<get-RetryAfter>|<get-RetryAfter>(){}[0]
        final const val SLUG // io.github.kingg22.ktorgen.http/Header.Companion.SLUG|{}SLUG[0]
            final fun <get-SLUG>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.SLUG.<get-SLUG>|<get-SLUG>(){}[0]
        final const val ScheduleReply // io.github.kingg22.ktorgen.http/Header.Companion.ScheduleReply|{}ScheduleReply[0]
            final fun <get-ScheduleReply>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.ScheduleReply.<get-ScheduleReply>|<get-ScheduleReply>(){}[0]
        final const val ScheduleTag // io.github.kingg22.ktorgen.http/Header.Companion.ScheduleTag|{}ScheduleTag[0]
            final fun <get-ScheduleTag>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.ScheduleTag.<get-ScheduleTag>|<get-ScheduleTag>(){}[0]
        final const val SecWebSocketAccept // io.github.kingg22.ktorgen.http/Header.Companion.SecWebSocketAccept|{}SecWebSocketAccept[0]
            final fun <get-SecWebSocketAccept>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.SecWebSocketAccept.<get-SecWebSocketAccept>|<get-SecWebSocketAccept>(){}[0]
        final const val SecWebSocketExtensions // io.github.kingg22.ktorgen.http/Header.Companion.SecWebSocketExtensions|{}SecWebSocketExtensions[0]
            final fun <get-SecWebSocketExtensions>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.SecWebSocketExtensions.<get-SecWebSocketExtensions>|<get-SecWebSocketExtensions>(){}[0]
        final const val SecWebSocketKey // io.github.kingg22.ktorgen.http/Header.Companion.SecWebSocketKey|{}SecWebSocketKey[0]
            final fun <get-SecWebSocketKey>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.SecWebSocketKey.<get-SecWebSocketKey>|<get-SecWebSocketKey>(){}[0]
        final const val SecWebSocketProtocol // io.github.kingg22.ktorgen.http/Header.Companion.SecWebSocketProtocol|{}SecWebSocketProtocol[0]
            final fun <get-SecWebSocketProtocol>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.SecWebSocketProtocol.<get-SecWebSocketProtocol>|<get-SecWebSocketProtocol>(){}[0]
        final const val SecWebSocketVersion // io.github.kingg22.ktorgen.http/Header.Companion.SecWebSocketVersion|{}SecWebSocketVersion[0]
            final fun <get-SecWebSocketVersion>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.SecWebSocketVersion.<get-SecWebSocketVersion>|<get-SecWebSocketVersion>(){}[0]
        final const val Server // io.github.kingg22.ktorgen.http/Header.Companion.Server|{}Server[0]
            final fun <get-Server>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.Server.<get-Server>|<get-Server>(){}[0]
        final const val SetCookie // io.github.kingg22.ktorgen.http/Header.Companion.SetCookie|{}SetCookie[0]
            final fun <get-SetCookie>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.SetCookie.<get-SetCookie>|<get-SetCookie>(){}[0]
        final const val StrictTransportSecurity // io.github.kingg22.ktorgen.http/Header.Companion.StrictTransportSecurity|{}StrictTransportSecurity[0]
            final fun <get-StrictTransportSecurity>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.StrictTransportSecurity.<get-StrictTransportSecurity>|<get-StrictTransportSecurity>(){}[0]
        final const val TE // io.github.kingg22.ktorgen.http/Header.Companion.TE|{}TE[0]
            final fun <get-TE>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.TE.<get-TE>|<get-TE>(){}[0]
        final const val Timeout // io.github.kingg22.ktorgen.http/Header.Companion.Timeout|{}Timeout[0]
            final fun <get-Timeout>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.Timeout.<get-Timeout>|<get-Timeout>(){}[0]
        final const val Trailer // io.github.kingg22.ktorgen.http/Header.Companion.Trailer|{}Trailer[0]
            final fun <get-Trailer>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.Trailer.<get-Trailer>|<get-Trailer>(){}[0]
        final const val TransferEncoding // io.github.kingg22.ktorgen.http/Header.Companion.TransferEncoding|{}TransferEncoding[0]
            final fun <get-TransferEncoding>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.TransferEncoding.<get-TransferEncoding>|<get-TransferEncoding>(){}[0]
        final const val Upgrade // io.github.kingg22.ktorgen.http/Header.Companion.Upgrade|{}Upgrade[0]
            final fun <get-Upgrade>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.Upgrade.<get-Upgrade>|<get-Upgrade>(){}[0]
        final const val UserAgent // io.github.kingg22.ktorgen.http/Header.Companion.UserAgent|{}UserAgent[0]
            final fun <get-UserAgent>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.UserAgent.<get-UserAgent>|<get-UserAgent>(){}[0]
        final const val Vary // io.github.kingg22.ktorgen.http/Header.Companion.Vary|{}Vary[0]
            final fun <get-Vary>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.Vary.<get-Vary>|<get-Vary>(){}[0]
        final const val Via // io.github.kingg22.ktorgen.http/Header.Companion.Via|{}Via[0]
            final fun <get-Via>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.Via.<get-Via>|<get-Via>(){}[0]
        final const val WWWAuthenticate // io.github.kingg22.ktorgen.http/Header.Companion.WWWAuthenticate|{}WWWAuthenticate[0]
            final fun <get-WWWAuthenticate>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.WWWAuthenticate.<get-WWWAuthenticate>|<get-WWWAuthenticate>(){}[0]
        final const val Warning // io.github.kingg22.ktorgen.http/Header.Companion.Warning|{}Warning[0]
            final fun <get-Warning>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.Warning.<get-Warning>|<get-Warning>(){}[0]
        final const val XCorrelationId // io.github.kingg22.ktorgen.http/Header.Companion.XCorrelationId|{}XCorrelationId[0]
            final fun <get-XCorrelationId>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.XCorrelationId.<get-XCorrelationId>|<get-XCorrelationId>(){}[0]
        final const val XForwardedFor // io.github.kingg22.ktorgen.http/Header.Companion.XForwardedFor|{}XForwardedFor[0]
            final fun <get-XForwardedFor>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.XForwardedFor.<get-XForwardedFor>|<get-XForwardedFor>(){}[0]
        final const val XForwardedHost // io.github.kingg22.ktorgen.http/Header.Companion.XForwardedHost|{}XForwardedHost[0]
            final fun <get-XForwardedHost>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.XForwardedHost.<get-XForwardedHost>|<get-XForwardedHost>(){}[0]
        final const val XForwardedPort // io.github.kingg22.ktorgen.http/Header.Companion.XForwardedPort|{}XForwardedPort[0]
            final fun <get-XForwardedPort>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.XForwardedPort.<get-XForwardedPort>|<get-XForwardedPort>(){}[0]
        final const val XForwardedProto // io.github.kingg22.ktorgen.http/Header.Companion.XForwardedProto|{}XForwardedProto[0]
            final fun <get-XForwardedProto>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.XForwardedProto.<get-XForwardedProto>|<get-XForwardedProto>(){}[0]
        final const val XForwardedServer // io.github.kingg22.ktorgen.http/Header.Companion.XForwardedServer|{}XForwardedServer[0]
            final fun <get-XForwardedServer>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.XForwardedServer.<get-XForwardedServer>|<get-XForwardedServer>(){}[0]
        final const val XHttpMethodOverride // io.github.kingg22.ktorgen.http/Header.Companion.XHttpMethodOverride|{}XHttpMethodOverride[0]
            final fun <get-XHttpMethodOverride>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.XHttpMethodOverride.<get-XHttpMethodOverride>|<get-XHttpMethodOverride>(){}[0]
        final const val XRequestId // io.github.kingg22.ktorgen.http/Header.Companion.XRequestId|{}XRequestId[0]
            final fun <get-XRequestId>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.XRequestId.<get-XRequestId>|<get-XRequestId>(){}[0]
        final const val XTotalCount // io.github.kingg22.ktorgen.http/Header.Companion.XTotalCount|{}XTotalCount[0]
            final fun <get-XTotalCount>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.XTotalCount.<get-XTotalCount>|<get-XTotalCount>(){}[0]
        final const val constKeyPins // io.github.kingg22.ktorgen.http/Header.Companion.constKeyPins|{}constKeyPins[0]
            final fun <get-constKeyPins>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.constKeyPins.<get-constKeyPins>|<get-constKeyPins>(){}[0]
        final const val constKeyPinsReportOnly // io.github.kingg22.ktorgen.http/Header.Companion.constKeyPinsReportOnly|{}constKeyPinsReportOnly[0]
            final fun <get-constKeyPinsReportOnly>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.Companion.constKeyPinsReportOnly.<get-constKeyPinsReportOnly>|<get-constKeyPinsReportOnly>(){}[0]
    }

    final object ContentTypes { // io.github.kingg22.ktorgen.http/Header.ContentTypes|null[0]
        final const val Any // io.github.kingg22.ktorgen.http/Header.ContentTypes.Any|{}Any[0]
            final fun <get-Any>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.ContentTypes.Any.<get-Any>|<get-Any>(){}[0]

        final object Application { // io.github.kingg22.ktorgen.http/Header.ContentTypes.Application|null[0]
            final const val Any // io.github.kingg22.ktorgen.http/Header.ContentTypes.Application.Any|{}Any[0]
                final fun <get-Any>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.ContentTypes.Application.Any.<get-Any>|<get-Any>(){}[0]
            final const val Atom // io.github.kingg22.ktorgen.http/Header.ContentTypes.Application.Atom|{}Atom[0]
                final fun <get-Atom>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.ContentTypes.Application.Atom.<get-Atom>|<get-Atom>(){}[0]
            final const val Cbor // io.github.kingg22.ktorgen.http/Header.ContentTypes.Application.Cbor|{}Cbor[0]
                final fun <get-Cbor>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.ContentTypes.Application.Cbor.<get-Cbor>|<get-Cbor>(){}[0]
            final const val Docx // io.github.kingg22.ktorgen.http/Header.ContentTypes.Application.Docx|{}Docx[0]
                final fun <get-Docx>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.ContentTypes.Application.Docx.<get-Docx>|<get-Docx>(){}[0]
            final const val FormUrlEncoded // io.github.kingg22.ktorgen.http/Header.ContentTypes.Application.FormUrlEncoded|{}FormUrlEncoded[0]
                final fun <get-FormUrlEncoded>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.ContentTypes.Application.FormUrlEncoded.<get-FormUrlEncoded>|<get-FormUrlEncoded>(){}[0]
            final const val GZip // io.github.kingg22.ktorgen.http/Header.ContentTypes.Application.GZip|{}GZip[0]
                final fun <get-GZip>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.ContentTypes.Application.GZip.<get-GZip>|<get-GZip>(){}[0]
            final const val HalJson // io.github.kingg22.ktorgen.http/Header.ContentTypes.Application.HalJson|{}HalJson[0]
                final fun <get-HalJson>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.ContentTypes.Application.HalJson.<get-HalJson>|<get-HalJson>(){}[0]
            final const val JavaScript // io.github.kingg22.ktorgen.http/Header.ContentTypes.Application.JavaScript|{}JavaScript[0]
                final fun <get-JavaScript>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.ContentTypes.Application.JavaScript.<get-JavaScript>|<get-JavaScript>(){}[0]
            final const val Json // io.github.kingg22.ktorgen.http/Header.ContentTypes.Application.Json|{}Json[0]
                final fun <get-Json>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.ContentTypes.Application.Json.<get-Json>|<get-Json>(){}[0]
            final const val OctetStream // io.github.kingg22.ktorgen.http/Header.ContentTypes.Application.OctetStream|{}OctetStream[0]
                final fun <get-OctetStream>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.ContentTypes.Application.OctetStream.<get-OctetStream>|<get-OctetStream>(){}[0]
            final const val Pdf // io.github.kingg22.ktorgen.http/Header.ContentTypes.Application.Pdf|{}Pdf[0]
                final fun <get-Pdf>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.ContentTypes.Application.Pdf.<get-Pdf>|<get-Pdf>(){}[0]
            final const val Pptx // io.github.kingg22.ktorgen.http/Header.ContentTypes.Application.Pptx|{}Pptx[0]
                final fun <get-Pptx>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.ContentTypes.Application.Pptx.<get-Pptx>|<get-Pptx>(){}[0]
            final const val ProblemJson // io.github.kingg22.ktorgen.http/Header.ContentTypes.Application.ProblemJson|{}ProblemJson[0]
                final fun <get-ProblemJson>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.ContentTypes.Application.ProblemJson.<get-ProblemJson>|<get-ProblemJson>(){}[0]
            final const val ProblemXml // io.github.kingg22.ktorgen.http/Header.ContentTypes.Application.ProblemXml|{}ProblemXml[0]
                final fun <get-ProblemXml>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.ContentTypes.Application.ProblemXml.<get-ProblemXml>|<get-ProblemXml>(){}[0]
            final const val ProtoBuf // io.github.kingg22.ktorgen.http/Header.ContentTypes.Application.ProtoBuf|{}ProtoBuf[0]
                final fun <get-ProtoBuf>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.ContentTypes.Application.ProtoBuf.<get-ProtoBuf>|<get-ProtoBuf>(){}[0]
            final const val Rss // io.github.kingg22.ktorgen.http/Header.ContentTypes.Application.Rss|{}Rss[0]
                final fun <get-Rss>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.ContentTypes.Application.Rss.<get-Rss>|<get-Rss>(){}[0]
            final const val Soap // io.github.kingg22.ktorgen.http/Header.ContentTypes.Application.Soap|{}Soap[0]
                final fun <get-Soap>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.ContentTypes.Application.Soap.<get-Soap>|<get-Soap>(){}[0]
            final const val Wasm // io.github.kingg22.ktorgen.http/Header.ContentTypes.Application.Wasm|{}Wasm[0]
                final fun <get-Wasm>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.ContentTypes.Application.Wasm.<get-Wasm>|<get-Wasm>(){}[0]
            final const val Xlsx // io.github.kingg22.ktorgen.http/Header.ContentTypes.Application.Xlsx|{}Xlsx[0]
                final fun <get-Xlsx>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.ContentTypes.Application.Xlsx.<get-Xlsx>|<get-Xlsx>(){}[0]
            final const val Xml // io.github.kingg22.ktorgen.http/Header.ContentTypes.Application.Xml|{}Xml[0]
                final fun <get-Xml>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.ContentTypes.Application.Xml.<get-Xml>|<get-Xml>(){}[0]
            final const val Xml_Dtd // io.github.kingg22.ktorgen.http/Header.ContentTypes.Application.Xml_Dtd|{}Xml_Dtd[0]
                final fun <get-Xml_Dtd>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.ContentTypes.Application.Xml_Dtd.<get-Xml_Dtd>|<get-Xml_Dtd>(){}[0]
            final const val Yaml // io.github.kingg22.ktorgen.http/Header.ContentTypes.Application.Yaml|{}Yaml[0]
                final fun <get-Yaml>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.ContentTypes.Application.Yaml.<get-Yaml>|<get-Yaml>(){}[0]
            final const val Zip // io.github.kingg22.ktorgen.http/Header.ContentTypes.Application.Zip|{}Zip[0]
                final fun <get-Zip>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.ContentTypes.Application.Zip.<get-Zip>|<get-Zip>(){}[0]
        }

        final object Audio { // io.github.kingg22.ktorgen.http/Header.ContentTypes.Audio|null[0]
            final const val Any // io.github.kingg22.ktorgen.http/Header.ContentTypes.Audio.Any|{}Any[0]
                final fun <get-Any>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.ContentTypes.Audio.Any.<get-Any>|<get-Any>(){}[0]
            final const val MP4 // io.github.kingg22.ktorgen.http/Header.ContentTypes.Audio.MP4|{}MP4[0]
                final fun <get-MP4>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.ContentTypes.Audio.MP4.<get-MP4>|<get-MP4>(){}[0]
            final const val MPEG // io.github.kingg22.ktorgen.http/Header.ContentTypes.Audio.MPEG|{}MPEG[0]
                final fun <get-MPEG>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.ContentTypes.Audio.MPEG.<get-MPEG>|<get-MPEG>(){}[0]
            final const val OGG // io.github.kingg22.ktorgen.http/Header.ContentTypes.Audio.OGG|{}OGG[0]
                final fun <get-OGG>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.ContentTypes.Audio.OGG.<get-OGG>|<get-OGG>(){}[0]
        }

        final object Font { // io.github.kingg22.ktorgen.http/Header.ContentTypes.Font|null[0]
            final const val Any // io.github.kingg22.ktorgen.http/Header.ContentTypes.Font.Any|{}Any[0]
                final fun <get-Any>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.ContentTypes.Font.Any.<get-Any>|<get-Any>(){}[0]
            final const val Collection // io.github.kingg22.ktorgen.http/Header.ContentTypes.Font.Collection|{}Collection[0]
                final fun <get-Collection>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.ContentTypes.Font.Collection.<get-Collection>|<get-Collection>(){}[0]
            final const val Otf // io.github.kingg22.ktorgen.http/Header.ContentTypes.Font.Otf|{}Otf[0]
                final fun <get-Otf>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.ContentTypes.Font.Otf.<get-Otf>|<get-Otf>(){}[0]
            final const val Sfnt // io.github.kingg22.ktorgen.http/Header.ContentTypes.Font.Sfnt|{}Sfnt[0]
                final fun <get-Sfnt>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.ContentTypes.Font.Sfnt.<get-Sfnt>|<get-Sfnt>(){}[0]
            final const val Ttf // io.github.kingg22.ktorgen.http/Header.ContentTypes.Font.Ttf|{}Ttf[0]
                final fun <get-Ttf>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.ContentTypes.Font.Ttf.<get-Ttf>|<get-Ttf>(){}[0]
            final const val Woff // io.github.kingg22.ktorgen.http/Header.ContentTypes.Font.Woff|{}Woff[0]
                final fun <get-Woff>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.ContentTypes.Font.Woff.<get-Woff>|<get-Woff>(){}[0]
            final const val Woff2 // io.github.kingg22.ktorgen.http/Header.ContentTypes.Font.Woff2|{}Woff2[0]
                final fun <get-Woff2>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.ContentTypes.Font.Woff2.<get-Woff2>|<get-Woff2>(){}[0]
        }

        final object Image { // io.github.kingg22.ktorgen.http/Header.ContentTypes.Image|null[0]
            final const val Any // io.github.kingg22.ktorgen.http/Header.ContentTypes.Image.Any|{}Any[0]
                final fun <get-Any>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.ContentTypes.Image.Any.<get-Any>|<get-Any>(){}[0]
            final const val GIF // io.github.kingg22.ktorgen.http/Header.ContentTypes.Image.GIF|{}GIF[0]
                final fun <get-GIF>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.ContentTypes.Image.GIF.<get-GIF>|<get-GIF>(){}[0]
            final const val JPEG // io.github.kingg22.ktorgen.http/Header.ContentTypes.Image.JPEG|{}JPEG[0]
                final fun <get-JPEG>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.ContentTypes.Image.JPEG.<get-JPEG>|<get-JPEG>(){}[0]
            final const val PNG // io.github.kingg22.ktorgen.http/Header.ContentTypes.Image.PNG|{}PNG[0]
                final fun <get-PNG>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.ContentTypes.Image.PNG.<get-PNG>|<get-PNG>(){}[0]
            final const val SVG // io.github.kingg22.ktorgen.http/Header.ContentTypes.Image.SVG|{}SVG[0]
                final fun <get-SVG>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.ContentTypes.Image.SVG.<get-SVG>|<get-SVG>(){}[0]
            final const val XIcon // io.github.kingg22.ktorgen.http/Header.ContentTypes.Image.XIcon|{}XIcon[0]
                final fun <get-XIcon>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.ContentTypes.Image.XIcon.<get-XIcon>|<get-XIcon>(){}[0]
        }

        final object Message { // io.github.kingg22.ktorgen.http/Header.ContentTypes.Message|null[0]
            final const val Any // io.github.kingg22.ktorgen.http/Header.ContentTypes.Message.Any|{}Any[0]
                final fun <get-Any>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.ContentTypes.Message.Any.<get-Any>|<get-Any>(){}[0]
            final const val Http // io.github.kingg22.ktorgen.http/Header.ContentTypes.Message.Http|{}Http[0]
                final fun <get-Http>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.ContentTypes.Message.Http.<get-Http>|<get-Http>(){}[0]
        }

        final object MultiPart { // io.github.kingg22.ktorgen.http/Header.ContentTypes.MultiPart|null[0]
            final const val Alternative // io.github.kingg22.ktorgen.http/Header.ContentTypes.MultiPart.Alternative|{}Alternative[0]
                final fun <get-Alternative>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.ContentTypes.MultiPart.Alternative.<get-Alternative>|<get-Alternative>(){}[0]
            final const val Any // io.github.kingg22.ktorgen.http/Header.ContentTypes.MultiPart.Any|{}Any[0]
                final fun <get-Any>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.ContentTypes.MultiPart.Any.<get-Any>|<get-Any>(){}[0]
            final const val ByteRanges // io.github.kingg22.ktorgen.http/Header.ContentTypes.MultiPart.ByteRanges|{}ByteRanges[0]
                final fun <get-ByteRanges>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.ContentTypes.MultiPart.ByteRanges.<get-ByteRanges>|<get-ByteRanges>(){}[0]
            final const val Encrypted // io.github.kingg22.ktorgen.http/Header.ContentTypes.MultiPart.Encrypted|{}Encrypted[0]
                final fun <get-Encrypted>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.ContentTypes.MultiPart.Encrypted.<get-Encrypted>|<get-Encrypted>(){}[0]
            final const val FormData // io.github.kingg22.ktorgen.http/Header.ContentTypes.MultiPart.FormData|{}FormData[0]
                final fun <get-FormData>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.ContentTypes.MultiPart.FormData.<get-FormData>|<get-FormData>(){}[0]
            final const val Mixed // io.github.kingg22.ktorgen.http/Header.ContentTypes.MultiPart.Mixed|{}Mixed[0]
                final fun <get-Mixed>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.ContentTypes.MultiPart.Mixed.<get-Mixed>|<get-Mixed>(){}[0]
            final const val Related // io.github.kingg22.ktorgen.http/Header.ContentTypes.MultiPart.Related|{}Related[0]
                final fun <get-Related>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.ContentTypes.MultiPart.Related.<get-Related>|<get-Related>(){}[0]
            final const val Signed // io.github.kingg22.ktorgen.http/Header.ContentTypes.MultiPart.Signed|{}Signed[0]
                final fun <get-Signed>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.ContentTypes.MultiPart.Signed.<get-Signed>|<get-Signed>(){}[0]
        }

        final object Text { // io.github.kingg22.ktorgen.http/Header.ContentTypes.Text|null[0]
            final const val Any // io.github.kingg22.ktorgen.http/Header.ContentTypes.Text.Any|{}Any[0]
                final fun <get-Any>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.ContentTypes.Text.Any.<get-Any>|<get-Any>(){}[0]
            final const val CSS // io.github.kingg22.ktorgen.http/Header.ContentTypes.Text.CSS|{}CSS[0]
                final fun <get-CSS>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.ContentTypes.Text.CSS.<get-CSS>|<get-CSS>(){}[0]
            final const val CSV // io.github.kingg22.ktorgen.http/Header.ContentTypes.Text.CSV|{}CSV[0]
                final fun <get-CSV>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.ContentTypes.Text.CSV.<get-CSV>|<get-CSV>(){}[0]
            final const val EventStream // io.github.kingg22.ktorgen.http/Header.ContentTypes.Text.EventStream|{}EventStream[0]
                final fun <get-EventStream>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.ContentTypes.Text.EventStream.<get-EventStream>|<get-EventStream>(){}[0]
            final const val Html // io.github.kingg22.ktorgen.http/Header.ContentTypes.Text.Html|{}Html[0]
                final fun <get-Html>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.ContentTypes.Text.Html.<get-Html>|<get-Html>(){}[0]
            final const val JavaScript // io.github.kingg22.ktorgen.http/Header.ContentTypes.Text.JavaScript|{}JavaScript[0]
                final fun <get-JavaScript>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.ContentTypes.Text.JavaScript.<get-JavaScript>|<get-JavaScript>(){}[0]
            final const val Plain // io.github.kingg22.ktorgen.http/Header.ContentTypes.Text.Plain|{}Plain[0]
                final fun <get-Plain>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.ContentTypes.Text.Plain.<get-Plain>|<get-Plain>(){}[0]
            final const val VCard // io.github.kingg22.ktorgen.http/Header.ContentTypes.Text.VCard|{}VCard[0]
                final fun <get-VCard>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.ContentTypes.Text.VCard.<get-VCard>|<get-VCard>(){}[0]
            final const val Xml // io.github.kingg22.ktorgen.http/Header.ContentTypes.Text.Xml|{}Xml[0]
                final fun <get-Xml>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.ContentTypes.Text.Xml.<get-Xml>|<get-Xml>(){}[0]
        }

        final object Video { // io.github.kingg22.ktorgen.http/Header.ContentTypes.Video|null[0]
            final const val Any // io.github.kingg22.ktorgen.http/Header.ContentTypes.Video.Any|{}Any[0]
                final fun <get-Any>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.ContentTypes.Video.Any.<get-Any>|<get-Any>(){}[0]
            final const val MP4 // io.github.kingg22.ktorgen.http/Header.ContentTypes.Video.MP4|{}MP4[0]
                final fun <get-MP4>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.ContentTypes.Video.MP4.<get-MP4>|<get-MP4>(){}[0]
            final const val MPEG // io.github.kingg22.ktorgen.http/Header.ContentTypes.Video.MPEG|{}MPEG[0]
                final fun <get-MPEG>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.ContentTypes.Video.MPEG.<get-MPEG>|<get-MPEG>(){}[0]
            final const val OGG // io.github.kingg22.ktorgen.http/Header.ContentTypes.Video.OGG|{}OGG[0]
                final fun <get-OGG>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.ContentTypes.Video.OGG.<get-OGG>|<get-OGG>(){}[0]
            final const val QuickTime // io.github.kingg22.ktorgen.http/Header.ContentTypes.Video.QuickTime|{}QuickTime[0]
                final fun <get-QuickTime>(): kotlin/String // io.github.kingg22.ktorgen.http/Header.ContentTypes.Video.QuickTime.<get-QuickTime>|<get-QuickTime>(){}[0]
        }
    }
}

open annotation class io.github.kingg22.ktorgen.http/HeaderMap : kotlin/Annotation { // io.github.kingg22.ktorgen.http/HeaderMap|null[0]
    constructor <init>() // io.github.kingg22.ktorgen.http/HeaderMap.<init>|<init>(){}[0]
}

open annotation class io.github.kingg22.ktorgen.http/HeaderParam : kotlin/Annotation { // io.github.kingg22.ktorgen.http/HeaderParam|null[0]
    constructor <init>(kotlin/String) // io.github.kingg22.ktorgen.http/HeaderParam.<init>|<init>(kotlin.String){}[0]

    final val name // io.github.kingg22.ktorgen.http/HeaderParam.name|{}name[0]
        final fun <get-name>(): kotlin/String // io.github.kingg22.ktorgen.http/HeaderParam.name.<get-name>|<get-name>(){}[0]
}

open annotation class io.github.kingg22.ktorgen.http/Headers : kotlin/Annotation { // io.github.kingg22.ktorgen.http/Headers|null[0]
    constructor <init>(kotlin/Array<out kotlin/String>...) // io.github.kingg22.ktorgen.http/Headers.<init>|<init>(kotlin.Array<out|kotlin.String>...){}[0]

    final val values // io.github.kingg22.ktorgen.http/Headers.values|{}values[0]
        final fun <get-values>(): kotlin/Array<out kotlin/String> // io.github.kingg22.ktorgen.http/Headers.values.<get-values>|<get-values>(){}[0]
}

open annotation class io.github.kingg22.ktorgen.http/Multipart : kotlin/Annotation { // io.github.kingg22.ktorgen.http/Multipart|null[0]
    constructor <init>() // io.github.kingg22.ktorgen.http/Multipart.<init>|<init>(){}[0]
}

open annotation class io.github.kingg22.ktorgen.http/OPTIONS : kotlin/Annotation { // io.github.kingg22.ktorgen.http/OPTIONS|null[0]
    constructor <init>(kotlin/String = ...) // io.github.kingg22.ktorgen.http/OPTIONS.<init>|<init>(kotlin.String){}[0]

    final val value // io.github.kingg22.ktorgen.http/OPTIONS.value|{}value[0]
        final fun <get-value>(): kotlin/String // io.github.kingg22.ktorgen.http/OPTIONS.value.<get-value>|<get-value>(){}[0]
}

open annotation class io.github.kingg22.ktorgen.http/PATCH : kotlin/Annotation { // io.github.kingg22.ktorgen.http/PATCH|null[0]
    constructor <init>(kotlin/String = ...) // io.github.kingg22.ktorgen.http/PATCH.<init>|<init>(kotlin.String){}[0]

    final val value // io.github.kingg22.ktorgen.http/PATCH.value|{}value[0]
        final fun <get-value>(): kotlin/String // io.github.kingg22.ktorgen.http/PATCH.value.<get-value>|<get-value>(){}[0]
}

open annotation class io.github.kingg22.ktorgen.http/POST : kotlin/Annotation { // io.github.kingg22.ktorgen.http/POST|null[0]
    constructor <init>(kotlin/String = ...) // io.github.kingg22.ktorgen.http/POST.<init>|<init>(kotlin.String){}[0]

    final val value // io.github.kingg22.ktorgen.http/POST.value|{}value[0]
        final fun <get-value>(): kotlin/String // io.github.kingg22.ktorgen.http/POST.value.<get-value>|<get-value>(){}[0]
}

open annotation class io.github.kingg22.ktorgen.http/PUT : kotlin/Annotation { // io.github.kingg22.ktorgen.http/PUT|null[0]
    constructor <init>(kotlin/String = ...) // io.github.kingg22.ktorgen.http/PUT.<init>|<init>(kotlin.String){}[0]

    final val value // io.github.kingg22.ktorgen.http/PUT.value|{}value[0]
        final fun <get-value>(): kotlin/String // io.github.kingg22.ktorgen.http/PUT.value.<get-value>|<get-value>(){}[0]
}

open annotation class io.github.kingg22.ktorgen.http/Part : kotlin/Annotation { // io.github.kingg22.ktorgen.http/Part|null[0]
    constructor <init>(kotlin/String = ..., kotlin/String = ...) // io.github.kingg22.ktorgen.http/Part.<init>|<init>(kotlin.String;kotlin.String){}[0]

    final val encoding // io.github.kingg22.ktorgen.http/Part.encoding|{}encoding[0]
        final fun <get-encoding>(): kotlin/String // io.github.kingg22.ktorgen.http/Part.encoding.<get-encoding>|<get-encoding>(){}[0]
    final val value // io.github.kingg22.ktorgen.http/Part.value|{}value[0]
        final fun <get-value>(): kotlin/String // io.github.kingg22.ktorgen.http/Part.value.<get-value>|<get-value>(){}[0]
}

open annotation class io.github.kingg22.ktorgen.http/PartMap : kotlin/Annotation { // io.github.kingg22.ktorgen.http/PartMap|null[0]
    constructor <init>(kotlin/String = ...) // io.github.kingg22.ktorgen.http/PartMap.<init>|<init>(kotlin.String){}[0]

    final val encoding // io.github.kingg22.ktorgen.http/PartMap.encoding|{}encoding[0]
        final fun <get-encoding>(): kotlin/String // io.github.kingg22.ktorgen.http/PartMap.encoding.<get-encoding>|<get-encoding>(){}[0]
}

open annotation class io.github.kingg22.ktorgen.http/Path : kotlin/Annotation { // io.github.kingg22.ktorgen.http/Path|null[0]
    constructor <init>(kotlin/String = ..., kotlin/Boolean = ...) // io.github.kingg22.ktorgen.http/Path.<init>|<init>(kotlin.String;kotlin.Boolean){}[0]

    final val encoded // io.github.kingg22.ktorgen.http/Path.encoded|{}encoded[0]
        final fun <get-encoded>(): kotlin/Boolean // io.github.kingg22.ktorgen.http/Path.encoded.<get-encoded>|<get-encoded>(){}[0]
    final val value // io.github.kingg22.ktorgen.http/Path.value|{}value[0]
        final fun <get-value>(): kotlin/String // io.github.kingg22.ktorgen.http/Path.value.<get-value>|<get-value>(){}[0]
}

open annotation class io.github.kingg22.ktorgen.http/Query : kotlin/Annotation { // io.github.kingg22.ktorgen.http/Query|null[0]
    constructor <init>(kotlin/String = ..., kotlin/Boolean = ...) // io.github.kingg22.ktorgen.http/Query.<init>|<init>(kotlin.String;kotlin.Boolean){}[0]

    final val encoded // io.github.kingg22.ktorgen.http/Query.encoded|{}encoded[0]
        final fun <get-encoded>(): kotlin/Boolean // io.github.kingg22.ktorgen.http/Query.encoded.<get-encoded>|<get-encoded>(){}[0]
    final val value // io.github.kingg22.ktorgen.http/Query.value|{}value[0]
        final fun <get-value>(): kotlin/String // io.github.kingg22.ktorgen.http/Query.value.<get-value>|<get-value>(){}[0]
}

open annotation class io.github.kingg22.ktorgen.http/QueryMap : kotlin/Annotation { // io.github.kingg22.ktorgen.http/QueryMap|null[0]
    constructor <init>(kotlin/Boolean = ...) // io.github.kingg22.ktorgen.http/QueryMap.<init>|<init>(kotlin.Boolean){}[0]

    final val encoded // io.github.kingg22.ktorgen.http/QueryMap.encoded|{}encoded[0]
        final fun <get-encoded>(): kotlin/Boolean // io.github.kingg22.ktorgen.http/QueryMap.encoded.<get-encoded>|<get-encoded>(){}[0]
}

open annotation class io.github.kingg22.ktorgen.http/QueryName : kotlin/Annotation { // io.github.kingg22.ktorgen.http/QueryName|null[0]
    constructor <init>(kotlin/Boolean = ...) // io.github.kingg22.ktorgen.http/QueryName.<init>|<init>(kotlin.Boolean){}[0]

    final val encoded // io.github.kingg22.ktorgen.http/QueryName.encoded|{}encoded[0]
        final fun <get-encoded>(): kotlin/Boolean // io.github.kingg22.ktorgen.http/QueryName.encoded.<get-encoded>|<get-encoded>(){}[0]
}

open annotation class io.github.kingg22.ktorgen.http/Streaming : kotlin/Annotation { // io.github.kingg22.ktorgen.http/Streaming|null[0]
    constructor <init>() // io.github.kingg22.ktorgen.http/Streaming.<init>|<init>(){}[0]
}

open annotation class io.github.kingg22.ktorgen.http/Tag : kotlin/Annotation { // io.github.kingg22.ktorgen.http/Tag|null[0]
    constructor <init>(kotlin/String = ...) // io.github.kingg22.ktorgen.http/Tag.<init>|<init>(kotlin.String){}[0]

    final val value // io.github.kingg22.ktorgen.http/Tag.value|{}value[0]
        final fun <get-value>(): kotlin/String // io.github.kingg22.ktorgen.http/Tag.value.<get-value>|<get-value>(){}[0]
}

open annotation class io.github.kingg22.ktorgen.http/Url : kotlin/Annotation { // io.github.kingg22.ktorgen.http/Url|null[0]
    constructor <init>() // io.github.kingg22.ktorgen.http/Url.<init>|<init>(){}[0]
}
